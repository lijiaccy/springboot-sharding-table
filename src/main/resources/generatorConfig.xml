<?xml version="1.0" encoding="UTF-8"?>
<!--必须加上，不用问为什么-->
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!--根节点-->
<generatorConfiguration>
    <!--有可能用到<properties>，这个是指定外部文件，比如*.properties,内部就可以通过${...}调用，不用的话也可以-->
    <!--classPathEntry自己指定数据库驱动jar路径,可以多个-->
    <classPathEntry
            location="D:\\apache-maven-3.3.9\\bao\\mysql\\mysql-connector-java\\5.1.6\\mysql-connector-java-5.1.6.jar"/>

    <!--id：为必须填写的唯一确定一个<context>元素
    defaultModelType:这个属性定义了MBG如何生成**实体类**。
    这个属性有以下可选值：
        1.conditional:*这是默认值*,这个模型和下面的hierarchical类似，除了如果那个单独的类将只包含一个字段，将不会生成一个单独的类。 因此,如果一个表的主键只有一个字段,那么不会为该字段生成单独的实体类,会将该字段合并到基本实体类中。
        2.flat:该模型为每一张表只生成一个实体类。这个实体类包含表中的所有字段。**这种模型最简单，推荐使用。**
        3.hierarchical:如果表有主键,那么该模型会产生一个单独的主键实体类,如果表还有BLOB字段， 则会为表生成一个包含所有BLOB字段的单独的实体类,然后为所有其他的字段生成一个单独的实体类。 MBG会在所有生成的实体类之间维护一个继承关系。
    -->
    <context id="my" targetRuntime="MyBatis3" defaultModelType="flat">
        <!--
        suppressAllComments:**阻止**生成注释，默认为false
        suppressDate:**阻止**生成的注释包含时间戳，默认为false-->
        <commentGenerator>
            <property name="suppressDate" value="false"/>
            <property name="suppressAllComments" value="false"/>
        </commentGenerator>

        <!--数据库连接信息，该元素必选，并且只能有一个。-->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://172.16.255.69:3306/test?characterEncoding=utf8" userId="root"
                        password="root"/>

        <!--控制生成的实体类,targetProject可以是相对路径:src/main/java-->
        <javaModelGenerator targetPackage="com.lijia.bean"
                            targetProject="D:/Workspaces/Jidea/mybatisgener/src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--如果用xml配置,启用以下代码-->
        <!--<sqlMapGenerator targetPackage="com.lijia.mapper"
                         targetProject="D:/Workspaces/Jidea/mybatisgener/src/main/java">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>-->

        <!--控制生成的接口，对应上面的sqlMapGenerator,targetProject可以是相对路径:src/main/java
        type:ANNOTATEDMAPPER 注解形式
             XMLMAPPER  xml形式
        -->
        <javaClientGenerator targetPackage="com.lijia.mapper"
                             targetProject="D:/Workspaces/Jidea/mybatisgener/src/main/java" type="ANNOTATEDMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!--<table tableName="%"  生成全部表-->
        <table tableName="user0" domainObjectName="User"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <!--<columnRenamingRule column=""  searchString="^D_"
                                replaceString=""/>-->
        </table>

    </context>
</generatorConfiguration>